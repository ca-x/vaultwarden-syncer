// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// StoragesColumns holds the columns for the "storages" table.
	StoragesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"webdav", "s3"}},
		{Name: "config", Type: field.TypeJSON},
		{Name: "enabled", Type: field.TypeBool, Default: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// StoragesTable holds the schema information for the "storages" table.
	StoragesTable = &schema.Table{
		Name:       "storages",
		Columns:    StoragesColumns,
		PrimaryKey: []*schema.Column{StoragesColumns[0]},
	}
	// SyncJobsColumns holds the columns for the "sync_jobs" table.
	SyncJobsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"pending", "running", "completed", "failed"}},
		{Name: "operation", Type: field.TypeEnum, Enums: []string{"backup", "restore"}},
		{Name: "message", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "started_at", Type: field.TypeTime, Nullable: true},
		{Name: "completed_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "storage_sync_jobs", Type: field.TypeInt, Nullable: true},
	}
	// SyncJobsTable holds the schema information for the "sync_jobs" table.
	SyncJobsTable = &schema.Table{
		Name:       "sync_jobs",
		Columns:    SyncJobsColumns,
		PrimaryKey: []*schema.Column{SyncJobsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sync_jobs_storages_sync_jobs",
				Columns:    []*schema.Column{SyncJobsColumns[7]},
				RefColumns: []*schema.Column{StoragesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "is_admin", Type: field.TypeBool, Default: false},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		StoragesTable,
		SyncJobsTable,
		UsersTable,
	}
)

func init() {
	SyncJobsTable.ForeignKeys[0].RefTable = StoragesTable
}
