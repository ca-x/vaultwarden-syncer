// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/ca-x/vaultwarden-syncer/ent/schema"
	"github.com/ca-x/vaultwarden-syncer/ent/storage"
	"github.com/ca-x/vaultwarden-syncer/ent/syncjob"
	"github.com/ca-x/vaultwarden-syncer/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	storageFields := schema.Storage{}.Fields()
	_ = storageFields
	// storageDescEnabled is the schema descriptor for enabled field.
	storageDescEnabled := storageFields[2].Descriptor()
	// storage.DefaultEnabled holds the default value on creation for the enabled field.
	storage.DefaultEnabled = storageDescEnabled.Default.(bool)
	// storageDescCreatedAt is the schema descriptor for created_at field.
	storageDescCreatedAt := storageFields[3].Descriptor()
	// storage.DefaultCreatedAt holds the default value on creation for the created_at field.
	storage.DefaultCreatedAt = storageDescCreatedAt.Default.(func() time.Time)
	// storageDescUpdatedAt is the schema descriptor for updated_at field.
	storageDescUpdatedAt := storageFields[4].Descriptor()
	// storage.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	storage.DefaultUpdatedAt = storageDescUpdatedAt.Default.(func() time.Time)
	// storage.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	storage.UpdateDefaultUpdatedAt = storageDescUpdatedAt.UpdateDefault.(func() time.Time)
	syncjobFields := schema.SyncJob{}.Fields()
	_ = syncjobFields
	// syncjobDescCreatedAt is the schema descriptor for created_at field.
	syncjobDescCreatedAt := syncjobFields[5].Descriptor()
	// syncjob.DefaultCreatedAt holds the default value on creation for the created_at field.
	syncjob.DefaultCreatedAt = syncjobDescCreatedAt.Default.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[3].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[4].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescIsAdmin is the schema descriptor for is_admin field.
	userDescIsAdmin := userFields[5].Descriptor()
	// user.DefaultIsAdmin holds the default value on creation for the is_admin field.
	user.DefaultIsAdmin = userDescIsAdmin.Default.(bool)
}
